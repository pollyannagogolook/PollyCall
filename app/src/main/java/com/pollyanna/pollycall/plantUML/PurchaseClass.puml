@startuml
'https://plantuml.com/class-diagram

' billing manager class
class BillingManager{
- _productWithProductDetails: MutableStateFlow<List<ProductDetails>>
- _purchases: MutableStateFlow<List<Purchase>>
- _isNewPurchaseAcknowledged : MutableStateFlow<Boolean>

+ productWithProductDetails: StateFlow<List<ProductDetails>>
+ purchases: StateFlow<List<Purchase>>
+ isNewPurchaseAcknowledged : StateFlow<Boolean>

+ startBillingConnection(isSuccessCallback: (Boolean) -> Unit)
+ purchaseSubscription(activity: Activity, productWithProductDetails: ProductDetails): BillingResult
+ queryPurchases()
+ queryProductDetails()
+ onPurchaseUpdated(billingResult: BillingResult, purchases: MutableList<Purchase>?)
+ onProductDetailsResponse(billingResult: BillingResult, productDetailsList: MutableList<ProductDetails>)
}



class SubscriptionRepository{
- billingManager: BillingManager
+ purchases: Flow<List<Purchase>>
+ productDetails: Flow<List<ProductDetails>>

+ startBillingConnection(isSuccessCallback: (Boolean) -> Unit)
+ terminateBillingConnection()
+ purchaseSubscription(activity: Activity, productWithProductDetails: ProductDetails): BillingResult
+ checkInternetConnection(context: Context, hasInternet: (Boolean) -> Unit)
}


' data class ErrorMsg
class ErrorMsg{
- title: String
- message: String
}


' LoginViewModel class (inject subscriptionRepository)
class LoginViewModel{
- _purchases: MutableStateFlow<List<Purchase>>
- _productWithProductDetails: MutableStateFlow<List<ProductDetails>>
- _showPremiumFeatures: MutableStateFlow<Boolean>
- _productPrice: MutableStateFlow<String?>
- _errorMsg: MutableStateFlow<ErrorMsg?>

+ showPremiumFeatures: StateFlow<Boolean>
+ productPrice: StateFlow<String?>
+ errorMsg: StateFlow<ErrorMsg?>

- checkIsIapSubscriptionUser(isUserCallback: (Boolean) -> Unit)
- fetchProductPrice()
- observePurchases()

+ buy(activity: Activity)
+ removeErrorMsg()
+ terminateBillingConnection()
}

class LoginPage{
- loginViewModel: LoginViewModel
+ observeData()
+ showErrorDialog(errorMessage: ErrorMsg)
+ navigateToHome()
}


' SubscriptionRepository class (inject billingManager)
BillingManager ..o SubscriptionRepository
SubscriptionRepository ..* LoginViewModel

LoginViewModel +.. ErrorMsg

LoginPage *.. LoginViewModel




@enduml
